{
  
    
        "post0": {
            "title": "Lists, Dictionaries, Loops",
            "content": "# variable of type string name = &quot;Kush Sirohi&quot; print(name) # variable of type integer age = 15 print(age) # variable of type dictionary Kush = { &quot;name&quot;: &quot;Kush&quot;, &quot;age&quot;: 15, &quot;height&quot;: &quot;6 foot&quot;, &quot;school&quot;: &quot;DNHS&quot;, } print(Kush) # list grocery = [&quot;milk&quot;, &quot;eggs&quot;, &quot;bread&quot;, &quot;fruits&quot;, &quot;veggies&quot;, &quot;drinks&quot;] print(grocery) # printing only odd list values grocery = [&quot;milk&quot;, &quot;eggs&quot;, &quot;bread&quot;, &quot;fruits&quot;, &quot;veggies&quot;, &quot;drinks&quot;] for i in range (3): print(grocery[2*i]) . Kush Sirohi 15 {&#39;name&#39;: &#39;Kush&#39;, &#39;age&#39;: 15, &#39;height&#39;: &#39;6 foot&#39;, &#39;school&#39;: &#39;DNHS&#39;} [&#39;milk&#39;, &#39;eggs&#39;, &#39;bread&#39;, &#39;fruits&#39;, &#39;veggies&#39;, &#39;drinks&#39;] milk bread veggies .",
            "url": "https://kushsirohi123.github.io/kushsirohirepo/jupyter/week2/2022/09/20/pythonlists&dictionaries.html",
            "relUrl": "/jupyter/week2/2022/09/20/pythonlists&dictionaries.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Python Kernel Notebook",
            "content": "Python Kernel Notebook . toc: true | comments: true | categories: [jupyter] | . def add(F, S): return F + S def subtract(F, S): return F - S def multiplication(F, S): return F * S def division(F, S): return F / S print (&quot;Please select the action.&quot;) print (&quot;a. Addition&quot;) print (&quot;b. Subtraction&quot;) print (&quot;c. Multiplication&quot;) print (&quot;d. Division&quot;) choice = input(&quot;What action:&quot;) number1= int (input (&quot; What is the First number?: &quot;)) number2= int (input (&quot;What is the Second number?: &quot;)) if choice == &#39;a&#39;: print (number1, &quot; + &quot;, number2, &quot; = &quot;, add(number1, number2)) elif choice == &#39;b&#39;: print (number1, &quot; - &quot;, number2, &quot; = &quot;, subtract(number1, number2)) if choice == &#39;c&#39;: print (number1, &quot; * &quot;, number2, &quot; = &quot;, multiplication(number1, number2)) elif choice == &#39;d&#39;: print (number1, &quot;/ &quot;, number2, &quot; = &quot;, division(number1, number2)) else: print(&quot;Action Finished&quot;) . Please select the action. a. Addition b. Subtraction c. Multiplication d. Division 4 + 4 = 8 Action Finished .",
            "url": "https://kushsirohi123.github.io/kushsirohirepo/2022/09/20/_08_28_Python1234.html",
            "relUrl": "/2022/09/20/_08_28_Python1234.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "My Bash And Tools Setup",
            "content": "echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/vscode # change vscode to different name to test git clone export project=$project_dir/APCSP # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/nighthawkcoders/APCSP.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Using conditional statement to create a project directory and project Directory /Users/kushsirohi/vscode exists. Directory /Users/kushsirohi/vscode/APCSP exists. . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project pwd echo &quot;&quot; echo &quot;list top level or root of files with project pulled from github&quot; ls echo &quot;&quot; echo &quot;list again with hidden files pulled from github&quot; ls -a # hidden files flag, many shell commands have flags echo &quot;&quot; echo &quot;list all files in long format&quot; ls -al # all files and long listing . Navigate to project, then navigate to area wwhere files were cloned /Users/kushsirohi/vscode/APCSP list top level or root of files with project pulled from github Gemfile _includes _word LICENSE _layouts assets Makefile _notebooks docker-compose.yml README.md _pages images _action_files _plugins index.html _config.yml _posts python _fastpages_docs _sass list again with hidden files pulled from github . Makefile _posts .. README.md _sass .devcontainer.json _action_files _word .git _config.yml assets .gitattributes _fastpages_docs docker-compose.yml .github _includes images .gitignore _layouts index.html .vscode _notebooks python Gemfile _pages LICENSE _plugins list all files in long format total 96 drwxr-xr-x 28 kushsirohi staff 896 Aug 25 11:32 . drwxr-xr-x 4 kushsirohi staff 128 Aug 25 17:23 .. -rw-r--r-- 1 kushsirohi staff 420 Aug 25 11:32 .devcontainer.json drwxr-xr-x 12 kushsirohi staff 384 Aug 25 11:32 .git -rw-r--r-- 1 kushsirohi staff 84 Aug 25 11:32 .gitattributes drwxr-xr-x 4 kushsirohi staff 128 Aug 25 11:32 .github -rw-r--r-- 1 kushsirohi staff 917 Aug 25 11:32 .gitignore drwxr-xr-x 3 kushsirohi staff 96 Aug 25 11:32 .vscode -rwxr-xr-x 1 kushsirohi staff 1304 Aug 25 11:32 Gemfile -rw-r--r-- 1 kushsirohi staff 11351 Aug 25 11:32 LICENSE -rwxr-xr-x 1 kushsirohi staff 1422 Aug 25 11:32 Makefile -rwxr-xr-x 1 kushsirohi staff 3614 Aug 25 11:32 README.md drwxr-xr-x 18 kushsirohi staff 576 Aug 25 11:32 _action_files -rw-r--r-- 1 kushsirohi staff 3716 Aug 25 11:32 _config.yml drwxr-xr-x 24 kushsirohi staff 768 Aug 25 11:32 _fastpages_docs drwxr-xr-x 29 kushsirohi staff 928 Aug 25 11:32 _includes drwxr-xr-x 6 kushsirohi staff 192 Aug 25 11:32 _layouts drwxr-xr-x 12 kushsirohi staff 384 Aug 25 11:32 _notebooks drwxr-xr-x 9 kushsirohi staff 288 Aug 25 11:32 _pages drwxr-xr-x 4 kushsirohi staff 128 Aug 25 11:32 _plugins drwxr-xr-x 29 kushsirohi staff 928 Aug 25 11:32 _posts drwxr-xr-x 3 kushsirohi staff 96 Aug 25 11:32 _sass drwxr-xr-x 3 kushsirohi staff 96 Aug 25 11:32 _word drwxr-xr-x 4 kushsirohi staff 128 Aug 25 11:32 assets -rwxr-xr-x 1 kushsirohi staff 1136 Aug 25 11:32 docker-compose.yml drwxr-xr-x 52 kushsirohi staff 1664 Aug 25 11:32 images -rw-r--r-- 1 kushsirohi staff 1061 Aug 25 11:32 index.html drwxr-xr-x 3 kushsirohi staff 96 Aug 25 11:32 python . echo &quot;Look for posts&quot; export posts=$project/_posts # _posts inside project cd $posts # this should exist per fastpages pwd # present working directory ls -l # list posts . Look for posts /Users/kushsirohi/vscode/APCSP/_posts total 456 -rw-r--r-- 1 kushsirohi staff 21306 Aug 25 11:32 2022-06-01-TT160-deploy.md -rw-r--r-- 1 kushsirohi staff 5861 Aug 25 11:32 2022-07-07-PBL-binary.md -rw-r--r-- 1 kushsirohi staff 3085 Aug 25 11:32 2022-07-08-PBL-grade_calc.md -rw-r--r-- 1 kushsirohi staff 3698 Aug 25 11:32 2022-07-08-PBL-graph.md -rw-r--r-- 1 kushsirohi staff 5729 Aug 25 11:32 2022-07-08-PBL-life.md -rw-r--r-- 1 kushsirohi staff 14387 Aug 25 11:32 2022-07-08-PBL-snake.md -rw-r--r-- 1 kushsirohi staff 334 Aug 25 11:32 2022-07-10-PBL-database.md -rw-r--r-- 1 kushsirohi staff 2908 Aug 25 11:32 2022-07-10-PBL-jokes.md -rw-r--r-- 1 kushsirohi staff 4046 Aug 25 11:32 2022-07-10-PBL-rapidapi.md -rw-r--r-- 1 kushsirohi staff 6685 Aug 25 11:32 2022-07-19-PBL-calculator.md -rw-r--r-- 1 kushsirohi staff 23325 Aug 25 11:32 2022-07-25-CSP-workshop.md -rw-r--r-- 1 kushsirohi staff 2333 Aug 25 11:32 2022-08-15-TP000-student_score_history.md -rw-r--r-- 1 kushsirohi staff 4363 Aug 25 11:32 2022-08-15-TP100-pseudo_code.md -rw-r--r-- 1 kushsirohi staff 7968 Aug 25 11:32 2022-08-15-TR100-tool_setup.md -rw-r--r-- 1 kushsirohi staff 15026 Aug 25 11:32 2022-08-15-TT100-tools.md -rw-r--r-- 1 kushsirohi staff 5590 Aug 25 11:32 2022-08-15-TT101-vscode-wsl.md -rw-r--r-- 1 kushsirohi staff 2155 Aug 25 11:32 2022-08-22-TR110-intro_python.md -rw-r--r-- 1 kushsirohi staff 5173 Aug 25 11:32 2022-08-22-TT110-fastpages.md -rw-r--r-- 1 kushsirohi staff 2798 Aug 25 11:32 2022-08-22-TT110-focus.md -rw-r--r-- 1 kushsirohi staff 2737 Aug 25 11:32 2022-08-29-TR120-data_abstract.md -rw-r--r-- 1 kushsirohi staff 10683 Aug 25 11:32 2022-08-29-TT120-agile.md -rw-r--r-- 1 kushsirohi staff 4498 Aug 25 11:32 2022-08-29-TT120-html_fragments.md -rw-r--r-- 1 kushsirohi staff 9037 Aug 25 11:32 2022-09-05-TP130-create_performance_task.md -rw-r--r-- 1 kushsirohi staff 7753 Aug 25 11:32 2022-09-05-TP131-create-task-bria.md -rw-r--r-- 1 kushsirohi staff 8066 Aug 25 11:32 2022-09-05-TR130-creative_development.md -rw-r--r-- 1 kushsirohi staff 3520 Aug 25 11:32 2022-09-05-TT130-applab.md -rw-r--r-- 1 kushsirohi staff 720 Aug 25 11:32 README.md . echo &quot;Look for notebooks&quot; export notebooks=$project/_notebooks # _notebooks is inside project cd $notebooks # this should exist per fastpages pwd # present working directory ls -l # list notebooks . Look for notebooks /Users/kushsirohi/vscode/APCSP/_notebooks total 280 -rw-r--r-- 1 kushsirohi staff 14243 Aug 25 11:32 2022-06-01-TT150-webapi_tutorial.ipynb -rw-r--r-- 1 kushsirohi staff 8653 Aug 25 11:32 2022-07-21-PBL-neo4j_intro.ipynb -rw-r--r-- 1 kushsirohi staff 11694 Aug 25 11:32 2022-08-22-TP110-python_hello.ipynb -rw-r--r-- 1 kushsirohi staff 20003 Aug 25 11:32 2022-08-22-TT110-anthony_and_sahil.ipynb -rw-r--r-- 1 kushsirohi staff 9525 Aug 25 11:32 2022-08-22-TT110-bash_tutorial.ipynb -rw-r--r-- 1 kushsirohi staff 35721 Aug 25 11:32 2022-08-25-tool_check.ipynb -rw-r--r-- 1 kushsirohi staff 10141 Aug 25 11:32 2022-08-29-TP120-python_lists.ipynb -rw-r--r-- 1 kushsirohi staff 12632 Aug 25 11:32 2022-09-05-TT130-js_tutorial.ipynb -rw-r--r-- 1 kushsirohi staff 771 Aug 25 11:32 README.md drwxr-xr-x 3 kushsirohi staff 96 Aug 25 11:32 images . echo &quot;Look for images in notebooks, print working directory, list files&quot; cd $notebooks/images # this should exist per fastpages pwd ls -l . Look for images in notebooks, print working directory, list files bash: cd: /images: No such file or directory /Users/kushsirohi total 8 drwx@ 3 kushsirohi staff 96 Jun 30 22:53 Applications drwx@ 47 kushsirohi staff 1504 Aug 28 22:48 Desktop drwx@ 5 kushsirohi staff 160 Jul 2 10:44 Documents drwx@ 48 kushsirohi staff 1536 Aug 28 22:56 Downloads -rw-r--r-- 1 kushsirohi staff 0 Aug 28 21:52 Lets drwx@ 83 kushsirohi staff 2656 Aug 18 11:32 Library drwx+ 10 kushsirohi staff 320 Jun 28 2021 Movies drwx+ 8 kushsirohi staff 256 Oct 7 2021 Music drwxr-xr-x 75 kushsirohi staff 2400 Jul 30 11:11 My project drwx+ 6 kushsirohi staff 192 Jun 7 2021 Pictures drwxr-xr-x+ 4 kushsirohi staff 128 Oct 21 2020 Public drwx 4 kushsirohi staff 128 May 1 2021 iCloud Drive (Archive) -rw-r--r-- 1 kushsirohi staff 11 Dec 22 2021 jagexappletviewer.preferences drwxr-xr-x 3 kushsirohi staff 96 Aug 18 11:19 opt drwxr-xr-x 4 kushsirohi staff 128 Aug 25 17:23 vscode . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project echo &quot;show the contents of README.md&quot; echo &quot;&quot; cat README.md # show contents of file, in this case markdown echo &quot;&quot; echo &quot;end of README.md&quot; . Navigate to project, then navigate to area wwhere files were cloned show the contents of README.md cat: README.md: No such file or directory end of README.md . echo &quot;Show the shell environment variables, key on left of equal value on right&quot; echo &quot;&quot; env . Show the shell environment variables, key on left of equal value on right SHELL=/bin/zsh TMPDIR=/var/folders/t5/fkg7hq2x4ml17j36_f8wxr000000gn/T/ CONDA_SHLVL=1 PYTHONUNBUFFERED=1 CONDA_PROMPT_MODIFIER=(base) OLDPWD=/Users/kushsirohi/Downloads ORIGINAL_XDG_CURRENT_DESKTOP=undefined MallocNanoZone=0 PYDEVD_USE_FRAME_EVAL=NO PYTHONIOENCODING=utf-8 USER=kushsirohi COMMAND_MODE=unix2003 CONDA_EXE=/Users/kushsirohi/opt/anaconda3/bin/conda SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.bKkx8lvehq/Listeners __CF_USER_TEXT_ENCODING=0x1F5:0:0 PAGER=cat VSCODE_AMD_ENTRYPOINT=vs/workbench/api/node/extensionHostProcess ELECTRON_RUN_AS_NODE=1 _CE_CONDA= PATH=/Users/kushsirohi/opt/anaconda3/bin:/Users/kushsirohi/opt/anaconda3/condabin:/Library/Frameworks/Python.framework/Versions/2.7/bin:/Library/Frameworks/Python.framework/Versions/3.10/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands CONDA_PREFIX=/Users/kushsirohi/opt/anaconda3 __CFBundleIdentifier=com.microsoft.VSCode PWD=/Users/kushsirohi VSCODE_HANDLES_UNCAUGHT_ERRORS=true XPC_FLAGS=0x0 PS1=[PEXP [ ]ECT_PROMPT&gt; _CE_M= XPC_SERVICE_NAME=0 SHLVL=1 HOME=/Users/kushsirohi VSCODE_NLS_CONFIG={&#34;locale&#34;:&#34;en-us&#34;,&#34;availableLanguages&#34;:{},&#34;_languagePackSupport&#34;:true} CONDA_PYTHON_EXE=/Users/kushsirohi/opt/anaconda3/bin/python LOGNAME=kushsirohi LC_CTYPE=UTF-8 VSCODE_IPC_HOOK=/Users/kushsirohi/Library/Application Support/Code/1.70.2-main.sock VSCODE_CODE_CACHE_PATH=/Users/kushsirohi/Library/Application Support/Code/CachedData/e4503b30fc78200f846c62cf8091b76ff5547662 CONDA_DEFAULT_ENV=base VSCODE_PID=69626 VSCODE_CWD=/ _=/usr/bin/env . cd $project echo &quot;&quot; echo &quot;show the secrets of .git&quot; cd .git ls -l echo &quot;&quot; echo &quot;look at config file&quot; cat config . show the secrets of .git bash: cd: .git: No such file or directory total 8 drwx@ 3 kushsirohi staff 96 Jun 30 22:53 Applications drwx@ 47 kushsirohi staff 1504 Aug 28 22:48 Desktop drwx@ 5 kushsirohi staff 160 Jul 2 10:44 Documents drwx@ 48 kushsirohi staff 1536 Aug 28 22:56 Downloads -rw-r--r-- 1 kushsirohi staff 0 Aug 28 21:52 Lets drwx@ 83 kushsirohi staff 2656 Aug 18 11:32 Library drwx+ 10 kushsirohi staff 320 Jun 28 2021 Movies drwx+ 8 kushsirohi staff 256 Oct 7 2021 Music drwxr-xr-x 75 kushsirohi staff 2400 Jul 30 11:11 My project drwx+ 6 kushsirohi staff 192 Jun 7 2021 Pictures drwxr-xr-x+ 4 kushsirohi staff 128 Oct 21 2020 Public drwx 4 kushsirohi staff 128 May 1 2021 iCloud Drive (Archive) -rw-r--r-- 1 kushsirohi staff 11 Dec 22 2021 jagexappletviewer.preferences drwxr-xr-x 3 kushsirohi staff 96 Aug 18 11:19 opt drwxr-xr-x 4 kushsirohi staff 128 Aug 25 17:23 vscode look at config file cat: config: No such file or directory . . python --version python2 --version . Python 3.9.12 Python 2.7.18 . conda list . # packages in environment at /Users/kushsirohi/opt/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39hecd8cb5_1 aiohttp 3.8.1 py39hca72f7f_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39hecd8cb5_0 anaconda-navigator 2.1.4 py39hecd8cb5_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39hecd8cb5_0 appdirs 1.4.4 pyhd3eb1b0_0 applaunchservices 0.2.1 pyhd3eb1b0_0 appnope 0.1.2 py39hecd8cb5_1001 appscript 1.1.2 py39h9ed2024_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39hca72f7f_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39hecd8cb5_0 astropy 5.0.4 py39h67323c0_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.7.2 pypi_0 pypi bcrypt 3.2.0 py39h9ed2024_0 beautifulsoup4 4.11.1 py39hecd8cb5_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39hca72f7f_0 bkcharts 0.2 py39hecd8cb5_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h2842e9f_0 bokeh 2.4.2 py39hecd8cb5_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39h67323c0_0 brotli 1.0.9 hb1e8313_2 brotlipy 0.7.0 py39h9ed2024_1003 brunsli 0.1 h23ab428_0 bzip2 1.0.8 h1de35cc_0 c-ares 1.18.1 hca72f7f_0 ca-certificates 2022.3.29 hecd8cb5_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39hecd8cb5_2 cffi 1.15.0 py39hc55c11b_1 cfitsio 3.470 hee0f690_6 chardet 4.0.0 py39hecd8cb5_1003 charls 2.2.0 h23ab428_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39hecd8cb5_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39hecd8cb5_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.13.0 py39hecd8cb5_0 conda-build 3.21.8 py39hecd8cb5_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39hca72f7f_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39h2fd3fbb_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 hca72f7f_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39he9d5cce_0 cytoolz 0.11.0 py39h9ed2024_0 daal4py 2021.5.0 py39h24a4e90_0 dal 2021.5.0 hecd8cb5_782 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39hecd8cb5_1 debugpy 1.5.1 py39he9d5cce_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39hecd8cb5_1 entrypoints 0.4 py39hecd8cb5_0 et_xmlfile 1.1.0 py39hecd8cb5_0 executing 0.8.3 pyhd3eb1b0_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 hd8bbffd_0 frozenlist 1.2.0 py39hca72f7f_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39hecd8cb5_1 gensim 4.1.2 py39he9d5cce_0 giflib 5.2.1 haf1e3a3_0 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h23ab428_2 gmpy2 2.1.2 py39hd5de756_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h9ed2024_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39hecd8cb5_0 greenlet 1.1.1 py39h23ab428_0 grpcio 1.42.0 py39ha29bfda_0 h5py 3.6.0 py39h4a1dd59_0 hdf5 1.10.6 hdbbcd12_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 h0a44026_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39ha952a84_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39hecd8cb5_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39hecd8cb5_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 hecd8cb5_3538 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39hecd8cb5_0 ipython 8.2.0 py39hecd8cb5_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39hecd8cb5_1 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e hca72f7f_0 jq 1.6 h9ed2024_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39hecd8cb5_0 jupyter 1.0.0 py39hecd8cb5_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39hecd8cb5_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 haf1e3a3_2 keyring 23.4.0 py39hecd8cb5_0 kiwisolver 1.3.2 py39he9d5cce_0 krb5 1.19.2 hcd88c3b_0 lazy-object-proxy 1.6.0 py39h9ed2024_0 lcms2 2.12 hf1fd2bf_0 lerc 3.0 he9d5cce_0 libaec 1.0.4 hb1e8313_1 libarchive 3.4.2 haa3ed63_0 libcrc32c 1.1.1 hb1e8313_2 libcurl 7.82.0 h6dfd666_0 libcxx 12.0.0 h2f01273_0 libdeflate 1.8 h9ed2024_5 libedit 3.1.20210910 hca72f7f_0 libev 4.33 h9ed2024_1 libffi 3.3 hb1e8313_2 libgfortran 3.0.1 h93005f0_2 libiconv 1.16 hca72f7f_2 libidn2 2.3.2 h9ed2024_0 liblief 0.11.5 he9d5cce_1 libllvm11 11.1.0 h46f1229_1 libnghttp2 1.46.0 ha29bfda_0 libpng 1.6.37 ha441bb4_0 libprotobuf 3.19.1 h8346a28_0 libsodium 1.0.18 h1de35cc_0 libspatialindex 1.9.3 h23ab428_0 libssh2 1.10.0 h0a4fc7d_0 libtiff 4.2.0 h87d7836_0 libunistring 0.9.10 h9ed2024_0 libwebp 1.2.2 h56c3ce4_0 libwebp-base 1.2.2 hca72f7f_0 libxml2 2.9.12 hcdb78fc_0 libxslt 1.1.34 h83b36ba_0 libzopfli 1.0.3 hb1e8313_0 llvm-openmp 12.0.0 h0dcd299_1 llvmlite 0.38.0 py39h8346a28_0 locket 0.2.1 py39hecd8cb5_2 lxml 4.8.0 py39h65b224f_0 lz4-c 1.9.3 h23ab428_1 lzo 2.10 haf1e3a3_2 markdown 3.3.4 py39hecd8cb5_0 markupsafe 2.0.1 py39h9ed2024_0 matplotlib 3.5.1 py39hecd8cb5_1 matplotlib-base 3.5.1 py39hfb0c5b7_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39hecd8cb5_1 mistune 0.8.4 py39h9ed2024_1000 mkl 2021.4.0 hecd8cb5_637 mkl-service 2.4.0 py39h9ed2024_0 mkl_fft 1.3.1 py39h4ab4a9b_0 mkl_random 1.2.2 py39hb2f4e1b_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h6ef4df4_1 mpfr 4.0.2 h9066e36_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39hecd8cb5_0 msgpack-python 1.0.2 py39hf7b0b51_1 multidict 5.2.0 py39hca72f7f_2 multipledispatch 0.6.0 py39hecd8cb5_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39hecd8cb5_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39hecd8cb5_0 nbconvert 6.4.4 py39hecd8cb5_0 nbformat 5.3.0 py39hecd8cb5_0 ncurses 6.3 hca72f7f_2 nest-asyncio 1.5.5 py39hecd8cb5_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 10.13.0 h0a44026_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39hecd8cb5_0 numba 0.55.1 py39hae1ba45_0 numexpr 2.8.1 py39h2e5f0a9_0 numpy 1.21.5 py39h2e5f0a9_1 numpy-base 1.21.5 py39h3b1a694_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h9ed2024_0 openjpeg 2.4.0 h66ea3da_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n hca72f7f_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39he9d5cce_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39hecd8cb5_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39hecd8cb5_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 pathspec 0.7.0 py_0 patsy 0.5.2 py39hecd8cb5_1 pep8 1.7.1 py39hecd8cb5_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39hde71d04_0 pip 21.2.4 py39hecd8cb5_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39hecd8cb5_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39he9d5cce_0 psutil 5.8.0 py39h9ed2024_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39he9d5cce_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h9ed2024_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39hecd8cb5_0 pycurl 7.44.1 py39hbcfaee0_1 pydispatcher 2.0.5 py39hecd8cb5_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h9ed2024_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39hecd8cb5_0 pylint 2.9.6 py39hecd8cb5_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39he9d5cce_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h23ab428_6 pyrsistent 0.18.0 py39hca72f7f_0 pysocks 1.7.1 py39hecd8cb5_0 pytables 3.6.1 py39h648f197_1 pytest 7.1.1 py39hecd8cb5_0 python 3.9.12 hdfd78df_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h23ab428_3 python.app 3 py39hca72f7f_0 pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39hca72f7f_0 pyyaml 6.0 py39hca72f7f_1 pyzmq 22.3.0 py39he9d5cce_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h468cd18_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39hecd8cb5_0 readline 8.1.2 hca72f7f_1 regex 2022.3.15 py39hca72f7f_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39hecd8cb5_1 ruamel_yaml 0.15.100 py39h9ed2024_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39hae1ba45_0 scikit-learn 1.0.2 py39hae1ba45_1 scikit-learn-intelex 2021.5.0 py39hecd8cb5_0 scipy 1.7.3 py39h8c7af03_0 scrapy 2.6.1 py39hecd8cb5_0 seaborn 0.11.2 pyhd3eb1b0_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39hecd8cb5_0 sip 4.19.13 py39h23ab428_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 he9d5cce_0 sniffio 1.2.0 py39hecd8cb5_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39hecd8cb5_1 spyder-kernels 2.1.3 py39hecd8cb5_0 sqlalchemy 1.4.32 py39hca72f7f_0 sqlite 3.38.2 h707629a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39hca72f7f_0 sympy 1.10.1 py39hecd8cb5_0 tabulate 0.8.9 py39hecd8cb5_0 tbb 2021.5.0 haf03e11_0 tbb4py 2021.5.0 py39haf03e11_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39hecd8cb5_0 terminado 0.13.1 py39hecd8cb5_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h7bc2e8c_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h9ed2024_0 tqdm 4.64.0 py39hecd8cb5_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39hca72f7f_0 typed-ast 1.4.3 py39h9ed2024_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39he9d5cce_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 haf1e3a3_0 urllib3 1.26.9 py39hecd8cb5_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h999c104_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39hecd8cb5_1 websocket-client 0.58.0 py39hecd8cb5_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h6dfd666_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39hecd8cb5_0 wrapt 1.12.1 py39h9ed2024_1 wurlitzer 3.0.2 py39hecd8cb5_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xlwings 0.24.9 py39hecd8cb5_0 xz 5.2.5 h1de35cc_0 yaml 0.2.5 haf1e3a3_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h9ed2024_0 zeromq 4.3.4 h23ab428_0 zfp 0.5.5 he9d5cce_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h4dc903c_2 zope 1.0 py39hecd8cb5_1 zope.interface 5.4.0 py39h9ed2024_0 zstd 1.4.9 h322a384_0 . echo Conda Check # test for a kernel installation test=&quot;jupyter&quot; # keyword check=`conda list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . Conda Check jupyter 1.0.0 py39hecd8cb5_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39hecd8cb5_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 . jupyter --version jupyter kernelspec list . Selected Jupyter core packages... IPython : 8.2.0 ipykernel : 6.9.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 Available kernels: bash /Users/kushsirohi/Library/Jupyter/kernels/bash python3 /Users/kushsirohi/opt/anaconda3/share/jupyter/kernels/python3 . test=&quot;python3&quot; # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . python3 /Users/kushsirohi/opt/anaconda3/share/jupyter/kernels/python3 .",
            "url": "https://kushsirohi123.github.io/kushsirohirepo/techtalk/bash",
            "relUrl": "/techtalk/bash",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Lemonaderecipedocx",
            "content": "LEMONADE RECIPE . Step 1: Ingredients: 3 ripe lemons (they need to be a little soft!) … . Step 2: Juice Your Lemons. You need between 1/2 and 2/3 cup of lemon juice. … . Step 3: Make the Simple Syrup. Pour one cup of sugar into your glass measuring cup and add one cup of water on top. … . Step 4: Mix and Serve! .",
            "url": "https://kushsirohi123.github.io/kushsirohirepo/2022/09/20/LemonadeRecipeDocx.html",
            "relUrl": "/2022/09/20/LemonadeRecipeDocx.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Weeklyplans",
            "content": ". toc: markdown layout: post description: This is a collection of my weekly progress categories: [school] title: docker — . week 0 . created a fastpages | posted a jupyter file | posted a markdown file week 1 . | adding tables | adding more markdown files | making more posts | adding vocab week 2 . | started experimenting more with python | ran bash commands | lists, dictionaries, loops week 3 . | Created a quiz app within app lab week 4 . | Created a fastpages local server and a flask server for our group project | created a video detailing it | .",
            "url": "https://kushsirohi123.github.io/kushsirohirepo/2022/09/19/weeklyplans.html",
            "relUrl": "/2022/09/19/weeklyplans.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Docker server",
            "content": "",
            "url": "https://kushsirohi123.github.io/kushsirohirepo/markdown/2022/09/19/docker-server.html",
            "relUrl": "/markdown/2022/09/19/docker-server.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "DNHS BELL SCHEDULE",
            "content": "Monday, Tuesday, Thursday . Period Start Time End Time . Period 1 | 8:35 AM | 9:44 AM | . Period 2 | 9:49 AM | 10:58 AM | . Break | 10:58 AM | 11:08 AM | . Period 3 | 11:13 AM | 12:22 PM | . Lunch | 12:22 PM | 12:52 PM | . Period 4 | 12:57 PM | 2:06 PM | . Office Hours | 2:06 PM | 2:31 PM | . Period 5 | 2:36 PM | 3:45 PM | . Wednesday . Period Start Time End Time . Period 1 | 9:55 AM | 10:53 AM | . Period 2 | 10:58 AM | 11:56 AM | . Break | 11:56 AM | 12:06 pM | . Period 3 | 12:11 PM | 1:09 PM | . Lunch | 1:09 PM | 1:39 PM | . Period 4 | 1:44 PM | 2:42 PM | . Office Hours | 2:06 PM | 2:31 PM | . Period 5 | 2:47 PM | 3:45 PM | . Friday . Period Start Time End Time . Period 1 | 8:35 AM | 9:49 AM | . Period 2 | 9:54 AM | 11:08 AM | . Break | 11:08 AM | 11:18 AM | . Period 3 | 11:23 AM | 12:37 PM | . Lunch | 12:37 PM | 1:07 PM | . Period 4 | 1:12 PM | 2:26 PM | . Period 5 | 2:31 PM | 3:45 PM | . .",
            "url": "https://kushsirohi123.github.io/kushsirohirepo/markdown/2022/09/05/schedule.html",
            "relUrl": "/markdown/2022/09/05/schedule.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Lists, Dictionaries, Iteration",
            "content": "Lists and Dictionaries . As a quick review we used variables in the introduction last week. Variables all have a type: String, Integer, Float, List and Dictionary are some key types. In Python, variables are given a type at assignment, Types are important to understand and will impact operations, as we saw when we were required to user str() function in concatenation. . Developers often think of variables as primitives or collections. Look at this example and see if you can see hypothesize the difference between a primitive and a collection. | Take a minute and see if you can reference other elements in the list or other keys in the dictionary. Show output. | # variable of type string name = &quot;John Doe&quot; print(&quot;name&quot;, name, type(name)) # variable of type integer age = 18 print(&quot;age&quot;, age, type(age)) # variable of type float score = 90.0 print(&quot;score&quot;, score, type(score)) print() # variable of type list (many values in one variable) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;] print(&quot;langs&quot;, langs, type(langs)) print(&quot;- langs[0]&quot;, langs[0], type(langs[0])) print() # variable of type dictionary (a group of keys and values) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) . List and Dictionary purpose . Our society is being build on information. List and Dictionaries are used to collect information. Mostly, when information is collected it is formed into patterns. As that pattern is established you will collect many instances of that pattern. . List is used to collect many | Dictionary is used to define data patterns. | Iteration is often used to process through lists. | . To start exploring more deeply into List, Dictionary and Iteration we will explore constructing a List of people and cars. . As we learned above, List is a data type: class &#39;list&#39; | A &#39;list&#39; data type has the method &#39;.append(expression)&#39; that allows you to add to the list | In the example below, the expression appended to the &#39;list&#39; is the data type: class &#39;dict&#39; | At the end, you see a fairly complicated data structure. This is a list of dictionaries. The output looks similar to JSON and we will see this often, you will be required to understand this data structure and understand the parts. Easy peasy ;). | . InfoDb = [] # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;John&quot;, &quot;LastName&quot;: &quot;Mortensen&quot;, &quot;DOB&quot;: &quot;October 21&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;jmortensen@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2015-Fusion&quot;, &quot;2011-Ranger&quot;, &quot;2003-Excursion&quot;, &quot;1997-F350&quot;, &quot;1969-Cadillac&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Sunny&quot;, &quot;LastName&quot;: &quot;Naidu&quot;, &quot;DOB&quot;: &quot;August 2&quot;, &quot;Residence&quot;: &quot;Temecula&quot;, &quot;Email&quot;: &quot;snaidu@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;4Runner&quot;] }) # Print the data structure print(InfoDb) . Formatted output of List/Dictionary - for loop . Managing data in Lists and Dictionaries is for the convenience of passing the data across the internet or preparing it to be stored into a database. Also, it is a great way to exchange data inside of our own programs. . Next, we will take the stored data and output it within our notebook. There are multiple steps to this process... . Preparing a function to format the data, the print_data() function receives a parameter called &quot;d_rec&quot; short for dictionary record. It then references different keys within [] square brackets. | Preparing a function to iterate through the list, the for_loop() function uses an enhanced for loop that pull record by record out of InfoDb until the list is empty. Each time through the loop it call print_data(record), which passes the dictionary record to that function. | Finally, you need to activate your function with the call to the defined function for_loop(). Functions are defined, not activated until they are called. By placing for_loop() at the left margin the function is activated. | . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # for loop iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . Alternate methods for iteration - while loop . In coding, there are usually many ways to achieve the same result. Defined are functions illustrating using index to reference records in a list, these methods are called a &quot;while&quot; loop and &quot;recursion&quot;. . The while_loop() function contains a while loop, &quot;while i &lt; len(InfoDb):&quot;. This counts through the elements in the list start at zero, and passes the record to print_data() | . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . Calling a function repeatedly - recursion . This final technique achieves looping by calling itself repeatedly. . recursive_loop(i) function is primed with the value 0 on its activation with &quot;recursive_loop(0)&quot; | the last statement indented inside the if statement &quot;recursive_loop(i + 1)&quot; activates another call to the recursive_loop(i) function, each time i is increasing | ultimately the &quot;if i &lt; len(InfoDb):&quot; will evaluate to false and the program ends | . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Hacks . Add a couple of records to the InfoDb | Try to do a for loop with an index | Pair Share code somethings creative or unique, with loops and data. Hints... Would it be possible to output data in a reverse order? | Are there other methods that can be performed on lists? | Could you create new or add to dictionary data set? Could you do it with input? | Make a quiz that stores in a List of Dictionaries. | . | .",
            "url": "https://kushsirohi123.github.io/kushsirohirepo/collegeboard/python_lists",
            "relUrl": "/collegeboard/python_lists",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "SPANISH NOTES",
            "content": "",
            "url": "https://kushsirohi123.github.io/kushsirohirepo/school/2022/08/28/SPANISHNOTES-(1).html",
            "relUrl": "/school/2022/08/28/SPANISHNOTES-(1).html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "PHYSICS NOTES",
            "content": "Velocity lab Purpose: . To understand the difference between displacement and position. | To calculate an average velocity. | To analyze average velocity by using a graph. | To extrapolate from a graph. | To see the relationship between displacement, time, and average speed. Process: Use chalk or blue tape to mark off 1 meter sections on the floor, up to 5 meters. Run the Tumble Buggy several times and decide how you are going to measure the start and stop times. Use a stopwatch to measure the time it takes the Buggy to travel from 0 to 1 meters, 0 to 2 meters, 0 to 3 meters, 0 to 4 meters, and 0 to 5 meters. Do 3 trials for all distances and take an average time for each distance. Create a clean and easy-to-follow table to input all of the numbers from the above process. Graph: Create a full-page graph with position (meters) on the y-axis and average time (seconds) on the x-axis. Label this the “slow car”. What would a car that moves twice as fast look like on this graph? Using another color, create another line on the same graph showing how a hypothetical “fast car” would travel if the “fast car” can go 2 times faster than the “slow car”. Using a third color, create another line on the same graph showing the “slow car” traveling in the opposite direction (have the car start at 5 m and move to 0 m). Label this “reverse car.” Analysis: Calculate the slope of each line. What are the units associated with the slope? What does this imply about the meaning of the value of the slope? Does the slope change? What does this indicate about the motion of the car? Which car is associated with the greater slope? What general statement can be made that relates the slope of the best fit line to the speed of the car? Determine the time it took for the slow car to reach the 2.5 m mark. Where was slow car at the time t = 12.5 s? Based on the data you collected, how long would it take the fast car to get to a six meter mark? Where would the slow car be after 12 seconds? Using the relationships between change in position and the change in time, predict how long it would take the fast car to travel 45 m. What would be the change in the position of the slow car after 50 s? What would be the average speed of the slow car if it traveled from the zero to the five meter mark (use the time from your data table)? Average velocity? What would be the average speed of the slow car if it traveled from the zero to the five meter mark and back to the zero mark (double the time)? Average velocity? | .",
            "url": "https://kushsirohi123.github.io/kushsirohirepo/school/2022/08/28/PHYSICSNOTES.html",
            "relUrl": "/school/2022/08/28/PHYSICSNOTES.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "PHOTOGRAPHY NOTES",
            "content": "",
            "url": "https://kushsirohi123.github.io/kushsirohirepo/school/2022/08/28/PHOTOGRAPHY.html",
            "relUrl": "/school/2022/08/28/PHOTOGRAPHY.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "APCSP NOTES",
            "content": "Our first actual coding assignment was making a quiz in code.org, app lab . setScreen(“Title”); | onEvent(“startbutton”, “click”, function( ) { setScreen(“q1”); }); . onEvent(“fightclubq1”, “click”, function( ) { setScreen(“Correct”); . }); . onEvent(“nightcrawlerq1”, “click”, function( ) { setScreen(“Wrong”); }); . onEvent(“scarfaceq1”, “click”, function( ) { setScreen(“Wrong”); }); . onEvent(“continue”, “click”, function( ) { setScreen(“q2”); }); . onEvent(“continueq1correct”, “click”, function( ) { setScreen(“q2”); . }); . What this code does, is that it makes the movie pictures clickable and able to move onto the other slide. This is how I am making my quiz . | onEvent(“jawsq2”, “click”, function( ) { setScreen(“wrongq2”); }); . onEvent(“rockyq2”, “click”, function( ) { setScreen(“correctq2”); }); . onEvent(“topgunq2”, “click”, function( ) { setScreen(“wrongq2”); }); . onEvent(“continueq2”, “click”, function( ) { setScreen(“q3”); }); . onEvent(“continueq02”, “click”, function( ) { setScreen(“q3”); }); . onEvent(“nightcrawlerq3”, “click”, function( ) { setScreen(“correctq3”); }); . onEvent(“spidermanq3”, “click”, function( ) { setScreen(“wrongq3”); }); . onEvent(“fightclubq3”, “click”, function( ) { setScreen(“wrongq3”); }); . onEvent(“continueq3”, “click”, function( ) { setScreen(“q4”); }); . onEvent(“continueq03”, “click”, function( ) { setScreen(“q4”); }); . var score = 0; setText(“sc”, “score = “ + score); . onEvent(“fightclubq1”, “click”, function(){ score = score + 1; console.log(“c”) setText(“sc”, “score = “ + score) }); . onEvent(“rockyq2”, “click”, function(){ score = score + 1; console.log(“c”) setText(“sc”, “score = “ + score) }); . onEvent(“nightcrawlerq3”, “click”, function(){ score = score + 1; console.log(“c”) setText(“sc”, “score = “ + score) }); . The rest of the code keeps repeating what the first one did, but in different words and designs. .",
            "url": "https://kushsirohi123.github.io/kushsirohirepo/school/2022/08/28/APCSP.html",
            "relUrl": "/school/2022/08/28/APCSP.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "First Markdown Post",
            "content": "Markdown is a type of language that similar to html, in the aspect that they both are markup languages . print(&quot;You can also use python&quot;) . this | is a | ordered list | Big heading . Sorta big heading . Small heading .",
            "url": "https://kushsirohi123.github.io/kushsirohirepo/markdown/2022/08/21/markdownpost-(1).html",
            "relUrl": "/markdown/2022/08/21/markdownpost-(1).html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://kushsirohi123.github.io/kushsirohirepo/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  
      ,"page0": {
          "title": "APCSP vocab",
          "content": "md - markdown . .ipynb - jupyter extention . HTML - Hyper Text Markup Language . if statement - conditional statement that decided wether something runs. Very versatile . Def- makes a function, which is essentially resuable code .",
          "url": "https://kushsirohi123.github.io/kushsirohirepo/_pages/2022-08-28-APCSPvocab.html",
          "relUrl": "/_pages/2022-08-28-APCSPvocab.html",
          "date": ""
      }
      
  

  

  
      ,"page2": {
          "title": "About Me",
          "content": "I am a 14 year old sophmore attending del norte high school. I was born in India, and moved to the US when I was 8. Ive been coding for a couple months prior to this class, and im excited to learn new aspects about programming. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://kushsirohi123.github.io/kushsirohirepo/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://kushsirohi123.github.io/kushsirohirepo/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}